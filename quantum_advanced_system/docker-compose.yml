version: '3.8'

services:
  quantum-app:
    build: .
    image: quantumadvanced/financial-system:dev
    container_name: quantum-app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
      - DEBUG=True
      - QUANTUM_BACKEND=qasm_simulator
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - quantum-data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - quantum-network

  postgres:
    image: postgres:13-alpine
    container_name: quantum-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - quantum-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: quantum-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - quantum-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery-worker:
    build: .
    image: quantumadvanced/financial-system:dev
    container_name: quantum-celery-worker
    command: celery -A src.core.tasks worker --loglevel=info
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - quantum-network

  celery-beat:
    build: .
    image: quantumadvanced/financial-system:dev
    container_name: quantum-celery-beat
    command: celery -A src.core.tasks beat --loglevel=info
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    networks:
      - quantum-network

volumes:
  postgres-data:
  redis-data:
  quantum-data:

networks:
  quantum-network:
    driver: bridge